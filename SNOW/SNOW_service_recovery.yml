---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Create new incident
      servicenow.itsm.incident:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"
        state: new
        caller: billy-biao.zheng
        short_description: " {{ _service_name }} service stopped "
        description: " {{ _service_name }} is down on {{ _hostname }} reported by checkMK monitor."
      register: _incident
    
    - name: display incident ticket number
      debug: 
        msg: "The incident number is  {{ _incident.record.number }} ."

    - name: Pass incident number
      ansible.builtin.set_fact:
        ticket_number: "{{ _incident.record.number }}"


- hosts: "{{ _hostname }}"
  gather_facts: false
  tasks:
    - name: Try to restart {{ _service_name }}
      ansible.windows.win_service:
        name: spooler
        state: restarted
      register: chksrvc

    - name: save varible
      ansible.builtin.set_fact:
        srv_stat: "{{ chksrvc.state }}"

    - name: debug srv_stat
      debug: 
        msg: " debug info  {{ srv_stat }} ."


- hosts: localhost
  gather_facts: false
  tasks:
    - name: Update incident in ServiceNow
      servicenow.itsm.incident:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"
        state: in_progress
        number: "{{ ticket_number }}"
        other:
          comments: "Ansible automation is working on restart {{ _service_name }} on host {{ _hostname }}"
#      delegate_to: localhost



    - name: Validate service is up and update/close SNOW ticket
      tasks: 
        - name: debug srv_stat
          debug: 
            msg: " debug info  {{ srv_stat }} ."
      
        - name: Close incident in ServiceNow
          block:
            - name: closing incident 
              servicenow.itsm.incident:
                instance:
                  host: "{{ SN_HOST }}"
                  username: "{{ SN_USERNAME }}"
                  password: "{{ SN_PASSWORD }}"
            
                state: closed
                number: "{{ ticket_number }}"
                close_code: "Solved (Permanently)"
                close_notes: "Go back to bed. Ansible fixed problem on host {{ _hostname }} reported by checkMK. service status {{ _service_name }} = {{chksrvc.state}} "
#          delegate_to: localhost
          when: srv_stat == "running"


