---
- name: VM commission and create , update and close ServiceNow ticket 
  hosts: localhost
  gather_facts: false
  vars:
    sn_impact: medium
    sn_risk: moderate
    template_password: P@ssw0rd123456
    notes: Ansible Test
    dumpfacts: False

  tasks:
    - name: Create change request
      servicenow.itsm.change_request:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"

        type: standard
        state: new
        requested_by: billy-biao.zheng
        short_description: " Virtual machine  {{ vmname }} commission  "
        description: " Virtual machine  {{ vmname }} commission with {{ vcpu }} CPU , {{ vmem }} MB memory and {{ disk_size }} GB disk "
        priority: moderate
        risk: "{{ sn_risk }}"
        impact: "{{ sn_impact }}"
      delay: 5 
      register: _change_ticket  

    - name: Display change ticket number
      ansible.builtin.debug:
        msg: "The change ticket number is  {{ _change_ticket.record.number }} ."

    - name: Pass incident number
      ansible.builtin.set_fact:
        ticket_number: "{{ _change_ticket.record.number }}"


    - name: Change state to scheduled
      servicenow.itsm.change_request:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"

        state: scheduled
        assignment_group: Wintel
        number: "{{ ticket_number }}"
        other:
          comments: "Ansible automation commission virtual machine  {{ vmname }} ,with {{ vcpu }} CPU , {{ vmem }} MB memory and {{ disk_size }} GB disk. "

    - name: Change state to implement
      servicenow.itsm.change_request:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"

        state: implement
        assignment_group: Wintel
        number: "{{ ticket_number }}"
        other:
          comments: "Ansible automation commission virtual machine  {{ vmname }} ,with {{ vcpu }} CPU , {{ vmem }} MB memory and {{ disk_size }} GB disk. "


    - name: Create VM from template
      vmware_guest:
        validate_certs: False
        datacenter: "{{ vdatacenter }}"
        cluster: "{{ vcluster }}"
        folder: "{{ vcenter_folder }}"
        name: "{{ vmname }}"
        template: "{{ vmtemplate }}"
        disk:
          - size_gb: "{{ disk_size }}"
            type: thin
            datastore: "{{ datastore }}"
        networks:
        - name: "{{ vnetwork_name }}"
          ip: "{{ vip }}"
          netmask: "{{ vnetmask }}"
          gateway: "{{ vgateway }}"
          domain: "{{ vdomain }}"
          dns_servers:
          - "{{ vdns1 }}"
          - "{{ vdns2 }}"
        hardware:
          num_cpus: "{{ vcpu }}"
          memory_mb: "{{ vmem }}"
        customization:
          password: "{{ template_password }}"
      # This powershell script is required for cross vlan WinRM to run the next tasks - Once playbook complete remove the firewall rule if needed
          runonce:
           - cmd /c echo New-NetFirewallRule -DisplayName "WinRM 5985" -Direction Inbound -LocalPort 5985 -Protocol TCP -RemoteAddress Any -Action Allow > C:\enable_winrm.ps1
           - powershell.exe -ExecutionPolicy Unrestricted -File C:\enable_winrm.ps1 -ForceNewSSLCert -EnableCredSSP
        wait_for_customization: yes
        wait_for_ip_address: True
        state: present
      register: newvm

    - name: IP address info
      debug:
        msg: "{{ newvm.instance.ipv4 }} {{ vmname }}"

    - name: Look up the virtual machine  in the inventory
      register: search_result
      vmware.vmware_rest.vcenter_vm_info:
        filter_names:
        - '{{ vmname }}'
      
    - name: Collect information about a specific virtual machine
      vmware.vmware_rest.vcenter_vm_info:
        vm: '{{ search_result.value[0].vm }}'
      register: vm_info


    - name: change state to review in ServiceNow
      block:
        - name: change state to review 
          servicenow.itsm.change_request:
            instance:
              host: "{{ SN_HOST }}"
              username: "{{ SN_USERNAME }}"
              password: "{{ SN_PASSWORD }}"

            state: review
            close_code: "successful"
            close_notes: "Ansible automation commission virtual machine  {{ vmname }} ,with {{ vcpu }} CPU , {{ vmem }} MB memory and {{ disk_size }} GB disk. IP address is {{ newvm.instance.ipv4 }} "
            assignment_group: Wintel
            number: "{{ ticket_number }}"
      when: vm_tools_info.value.run_state == "RUNNING"
