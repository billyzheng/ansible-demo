---
- name: Restore service create, update and close ServiceNow ticket after Ansible restores services
  hosts: "{{ ansible_eda.event.payload.NOTIFY_HOSTNAME }}"
  gather_facts: false
  vars:
    incident_description: Nginx Web Server is down
    sn_impact: medium
    sn_urgency: medium
  tasks:
    - name: Create new incident
      servicenow.itsm.incident:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"
        state: new
        caller: billy-biao.zheng
        urgency: "{{ sn_urgency }}"
        impact: "{{ sn_impact }}"
        short_description: " {{ ansible_eda.event.payload._service_name }} service stopped "
        description: " {{ ansible_eda.event.payload._service_name }} is down on {{ ansible_eda.event.payload.NOTIFY_HOSTNAME }} reported by checkMK monitor."
      register: _incident  
      delegate_to: localhost

    - name: Display incident number
      ansible.builtin.debug:
        msg: "The incident number is  {{ _incident.record.number }} ."

    - name: Pass incident number
      ansible.builtin.set_fact:
        ticket_number: "{{ _incident.record.number }}"

    - name: Try to restart {{ ansible_eda.event.payload._service_name }}
      ansible.windows.win_service:
        name: spooler
        state: restarted
      register: chksrvc

    - name: Update incident in ServiceNow
      servicenow.itsm.incident:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"
        state: in_progress
        number: "{{ ticket_number }}"
        other:
          comments: "Ansible automation is working on restart {{ ansible_eda.event.payload._service_name }} on host {{ ansible_eda.event.payload.NOTIFY_HOSTNAME }}"
      delegate_to: localhost

    - name: Close incident in ServiceNow
      block:
        - name: closing incident 
          servicenow.itsm.incident:
            instance:
              host: "{{ SN_HOST }}"
              username: "{{ SN_USERNAME }}"
              password: "{{ SN_PASSWORD }}"
            state: closed
            number: "{{ ticket_number }}"
            close_code: "Solved (Permanently)"
            close_notes: "Go back to bed. Ansible fixed problem on host {{ ansible_eda.event.payload.NOTIFY_HOSTNAME }} reported by checkMK. service status {{ ansible_eda.event.payload._service_name }} = {{chksrvc.state}} "
          delegate_to: localhost
      when: chksrvc.state == "running"
