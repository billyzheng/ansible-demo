---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Grab token using OAuth
      ansible.builtin.uri:
        url: "{{ SN_HOST }}/oauth_token.do"
        method: POST
        body_format: form-urlencoded
        return_content: true
        body:
          grant_type : password
          client_id : "{{ SN_CLIENT_ID }}"
          client_secret : "{{ SN_CLIENT_SECERT }}"
          username : "{{ SN_USERNAME }}"
          password : "{{ SN_PASSWORD }}"
      register: oauth_return_token

    - name: Ansible close the CATASK if CPU resize success
      ansible.builtin.uri:
        url: "{{ SN_HOST }}/api/abb2/v2/generic_change/updateChangeTask"
        method: PATCH
        headers:
          Content-Type : application/json
          Accept : application/json
          Authorization : "Bearer {{ oauth_return_token.json.access_token }}"
        body_format: json
        body: 
          state: "3"
          close_code: "successful"
          close_notes: "Automation is completed. Successfully updated/created the resource(s).\nCPU {{ variables.Action_Required }} evidence:\n Before resize: {{ CPU_Core_before }} cores\n After resize: {{ CPU_Core_after }} cores.\nVM current power state is {{ vm_power_state }}"
          sys_id: "{{ change_task_sys_id }}"
      when: catalog_item == 'CPU'
      register: SR_close_ctask  

    - name: Ansible close the CATASK if Memory resize sucess
      ansible.builtin.uri:
        url: "{{ SN_HOST }}/api/abb2/v2/generic_change/updateChangeTask"
        method: PATCH
        headers:
          Content-Type : application/json
          Accept : application/json
          Authorization : "Bearer {{ oauth_return_token.json.access_token }}"
        body_format: json
        body: 
          state: "3"
          close_code: "successful"
          close_notes: "Automation is completed. Successfully updated/created the resource(s).\nMemory {{ variables.Action_Required }} evidence:\n Before Resize: {{ Mem_size_before }} GB\n After Resize: {{ Mem_size_after }} GB.\nVM current power state is {{ vm_power_state }}"
          work_notes: "Automation is completed. Successfuly updated/created the resource(s)."
          sys_id: "{{ change_task_sys_id }}"
      when: catalog_item == 'Memory'
      register: SR_close_ctask  

    - name: Ansible close the CATASK if sucess
      ansible.builtin.uri:
        url: "{{ SN_HOST }}/api/abb2/v2/generic_change/updateChangeTask"
        method: PATCH
        headers:
          Content-Type : application/json
          Accept : application/json
          Authorization : "Bearer {{ oauth_return_token.json.access_token }}"
        body_format: json
        body: 
          state: "3"
          close_code: "successful"
          close_notes: "Automation is completed. Successfully updated/created the resource(s).\nServer Reboot evidence:\n Time before Reboot: {{ time_before_reboot }}\n Time after Reboot: {{ time_after_reboot }}\nVM current power state is {{ vm_power_state }}"
          work_notes: "Automation is completed. Successfuly updated/created the resource(s)."
          sys_id: "{{ change_task_sys_id }}"
      when: catalog_item == 'Reboot'    
      register: SR_close_ctask  

    # - name: Ansible close the CATASK if sucess
    #   ansible.builtin.uri:
    #     url: "{{ SN_HOST }}/api/abb2/v2/generic_change/updateChangeTask"
    #     method: PATCH
    #     headers:
    #       Content-Type : application/json
    #       Accept : application/json
    #       Authorization : "Bearer {{ oauth_return_token.json.access_token }}"
    #     body_format: json
    #     body: 
    #       state: "3"
    #       close_code: "successful"
    #       close_notes: "{% if variables.please_select_the_unit == 'CPU' %}Automation is completed. Successfully updated/created the resource(s).\nCPU size is now resized to {{ CPU_Core_after }} cores from {{ CPU_Core_before }} cores.\nVM current power state is {{ vm_power_state }}{% else %}Automation is completed. Successfully updated/created the resource(s).\nMemory size is now resized to {{ Mem_size_after }} GB from {{ Mem_size_before }} GB.\nVM current power state is {{ vm_power_state }}{% endif %}"
    #       work_notes: "Automation is completed. Successfuly updated/created the resource(s)."
    #       sys_id: "{{ change_task_sys_id }}"
    #   register: SR_close_ctask  
