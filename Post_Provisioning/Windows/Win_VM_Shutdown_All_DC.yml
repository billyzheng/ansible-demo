---
- name: Shutdown the VM
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Extract datacenter name
      set_fact:
        Vcenter_Name: "{{ hostvars[variables.server]['tag_category']['vcenter'] | first }}"

    - name: display info
      debug: 
         msg: "{{ Vcenter_Name }}"
      
    - name: Get the VM inventory - before changes
      register: pre_result
      vmware.vmware_rest.vcenter_vm_info:
        vcenter_hostname: '{{ Vcenter_Name }}'
        vcenter_username: '{{ VMWARE_USERNAME }}'
        vcenter_password: '{{ VMWARE_PASSWORD }}'
        vcenter_validate_certs: false
        filter_names:
        - "{{ variables.server }}"
         
  
    - name: Check VM power state
      community.vmware.vmware_vm_info:
         hostname: '{{ Vcenter_Name }}'
         username: '{{ VMWARE_USERNAME }}'
         password: '{{ VMWARE_PASSWORD }}'
         vm_name: "{{ variables.server }}"
         validate_certs: false
      register: vm_power_state

    - name: Fail if server is already shut down or shutdown task did not change state
      fail:
         msg: "Server is already shut down or shutdown task did not change state."
      when: vm_power_state.virtual_machines | length > 0 and vm_power_state.virtual_machines[0].power_state == 'poweredOff'
      
    - name: Shutdown the VM
      community.vmware.vmware_guest_powerstate:
         hostname: '{{ Vcenter_Name }}'
         username: '{{ VMWARE_USERNAME }}'
         password: '{{ VMWARE_PASSWORD }}'
         name: "{{ variables.server }}"
         validate_certs: false
         state: shutdown-guest
      when: vm_power_state.virtual_machines | length > 0 and vm_power_state.virtual_machines[0].power_state == 'poweredOn'
        
    - name: Wait until virtual machine offline
      vmware.vmware_rest.vcenter_vm_tools_info:
        vm: '{{ pre_result.value[0].vm }}'
      register: vm_tools_info
      until:
      - vm_tools_info is not failed
      - vm_tools_info.value.run_state == "NOT_RUNNING"
      retries: 60
      delay: 5

    - name: Get the VM inventory - after changes
      register: post_result
      vmware.vmware_rest.vcenter_vm_info:
        vcenter_hostname: '{{ Vcenter_Name }}'
        vcenter_username: '{{ VMWARE_USERNAME }}'
        vcenter_password: '{{ VMWARE_PASSWORD }}'
        vcenter_validate_certs: false
        filter_names:
        - "{{ variables.server }}"

    - name: Set Post VM Status
      set_fact:
         pre_server_state: "{{ pre_result.value[0].power_state }}"
         post_server_state: "{{ post_result.value[0].power_state }}"

    - set_stats:
         data:
           vm_pre_power_state: "{{ pre_server_state }}" 
           vm_post_power_state: "{{ post_server_state }}" 
           catalog_item: Shutdown
