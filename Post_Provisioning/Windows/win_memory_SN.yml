---
- name: Resize memory VM in vCenter
  hosts: localhost
  gather_facts: no
  tasks:

    - name: Get the VM inventory - before changes
      register: pre_result
      vmware.vmware_rest.vcenter_vm_info:
        filter_names:
        - "{{ variables.server }}"

    - name: Set memory variable
      set_fact:
        requested_memory_size: "{{ variables.Memory_Size | regex_replace(' GB', '') | int }}"
        current_memory_size: "{{ pre_result.value[0].memory_size_MiB | int }}"

    - name: Convert RAM to MB
      set_fact:
         ram_in_mb: "{{ (requested_memory_size | int) * 1024 }}"

    - name: Set memory increase variable
      set_fact:
        memory_increase: "{{ (current_memory_size | int) + (ram_in_mb | int) }}"
      when: variables.Action_Required == "Increase"

    - name: Set memory decrease variable
      set_fact:
        memory_decrease: "{{ (current_memory_size | int) - (ram_in_mb | int) }}"
      when: variables.Action_Required == "Decrease"

    - name: Check if Memory decrease would result in 0 or less Memory
      fail:
        msg: "Cannot decrease memory size to 1GB or less, please check manually"
      when: variables.Action_Required == 'Decrease' and (memory_decrease | int) < 1024

    - name: Power OFF the VM
      community.vmware.vmware_guest_powerstate:
        name: "{{ variables.server }}"
        state: powered-off
      ignore_errors: yes

    - name: Wait until virtual machine offline
      vmware.vmware_rest.vcenter_vm_tools_info:
        vm: '{{ pre_result.value[0].vm }}'
      register: vm_tools_info
      until:
      - vm_tools_info is not failed
      - vm_tools_info.value.run_state == "NOT_RUNNING"
      retries: 60
      delay: 5

    - name: Increase Memory
      community.vmware.vmware_guest:
        name: "{{ variables.server }}"
        hardware:
          memory_mb: "{{ memory_increase }}"
        state: present
      when: variables.Action_Required == 'Increase'
      register: mem_result_increase

    - name: Decrease Memory
      community.vmware.vmware_guest:
        name: "{{ variables.server }}"
        hardware:
          memory_mb: "{{ memory_decrease }}"
        state: present
      when: variables.Action_Required == 'Decrease'
      register: mem_result_decrease

    - name: Power ON the VM
      community.vmware.vmware_guest_powerstate:
        name: "{{ variables.server }}"
        state: powered-on
        
    - name: Wait until my VM is ready
      vmware.vmware_rest.vcenter_vm_tools_info:
        vm: '{{ pre_result.value[0].vm }}'
      register: vm_tools_info
      until:
      - vm_tools_info is not failed
      - vm_tools_info.value.run_state == "RUNNING"
      retries: 60
      delay: 5

    - name: Get the VM inventory - post changes
      register: post_result
      vmware.vmware_rest.vcenter_vm_info:
        filter_names:
        - "{{ variables.server }}"

    - name: Set Post VM Status
      set_fact:
        resized_mem_size: "{{ pre_result.value[0].memory_size_MiB | int }}"
        post_server_state: "{{ post_result.value[0].power_state }}"
        
    - set_stats:
        data:
          Mem_size_before: "{{ current_memory_size }}"  
          Mem_size_after: "{{ resized_mem_size }}" 
          vm_power_state: "{{ post_server_state }}"  
    
