---
- name: Get Vcenter vm details
  hosts: localhost
  gather_facts: false

  tasks:
  - name: Extract datacenter name
    set_fact:
      Vcenter_Name: "{{ hostvars[variables.server | upper]['tag_category']['vcenter'] | first }}"

  - name: display info
    debug: 
      msg: "{{ Vcenter_Name }}"

  - name: Gather all registered virtual machines
    community.vmware.vmware_vm_info:
      hostname: '{{ Vcenter_Name }}'
      username: '{{ VMWARE_USERNAME }}'
      password: '{{ VMWARE_PASSWORD }}'
      validate_certs: false
    register: all_servers

  - name: Display all VM guest names
    debug:
        msg: "{{ all_servers.virtual_machines | map(attribute='guest_name') | list }}"

  - name: Manually filter servers case-insensitively
    set_fact:
        matched_servers: >-
          {{
            all_servers.virtual_machines |
            selectattr('guest_name', 'defined') |
            selectattr('guest_name', 'search', variables.server | lower) |
            map(attribute='guest_name') |
            list
          }}

  - name: Display matched servers
    debug:
      msg: "{{ matched_servers }}"

  - name: Convert VM details to list of key-value pairs
    set_fact:
        vm_details_list: >-
          {{
            all_servers.virtual_machines | 
            map('community.builtin.dict2items') | 
            list
          }}

  - name: Display VM details as key-value pairs
     debug:
        msg: "{{ vm_details_list }}"

  # - name: Reboot the virtual machine
  #   community.vmware.vmware_guest_powerstate:
  #      hostname: '{{ Vcenter_Name }}'
  #      username: '{{ VMWARE_USERNAME }}'
  #      password: '{{ VMWARE_PASSWORD }}'
  #      validate_certs: false
  #      name: "{{ server_name }}"
  #      state: reboot-guest
  
