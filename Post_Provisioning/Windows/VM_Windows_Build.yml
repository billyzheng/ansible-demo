---
# create a new VM from a template

- name: VM from template
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
    template_password: P@ssw0rd123456
    notes: Ansible Test
    dumpfacts: False
  tasks:
    - name: Create VM from template
      vmware_guest:
        validate_certs: False
        datacenter: "{{ vdatacenter }}"
        cluster: "{{ vcluster }}"
        folder: "{{ vcenter_folder }}"
        name: "{{ vmname }}"
        template: "{{ vmtemplate }}"
        disk:
          - size_gb: "{{ disk_size }}"
            type: thin
            datastore: "{{ datastore }}"
          - size_gb: "{{ disk_size1 }}"
            type: thin
            datastore: "{{ datastore }}"
          - size_gb: "{{ disk_size2 }}"
            type: thin
            datastore: "{{ datastore }}"
        networks:
        - name: "{{ vnetwork_name }}"
          ip: "{{ vip }}"
          netmask: "{{ vnetmask }}"
          gateway: "{{ vgateway }}"
          domain: "{{ vdomain }}"
          dns_servers:
          - "{{ vdns1 }}"
          - "{{ vdns2 }}"
        hardware:
          num_cpus: "{{ vcpu }}"
          memory_mb: "{{ vmem }}"
        customization:
          password: "{{ template_password }}"
      # This powershell script is required for cross vlan WinRM to run the next tasks - Once playbook complete remove the firewall rule if needed
          runonce:
           - cmd /c echo New-NetFirewallRule -DisplayName "WinRM 5985" -Direction Inbound -LocalPort 5985 -Protocol TCP -RemoteAddress Any -Action Allow > C:\enable_winrm.ps1
           - powershell.exe -ExecutionPolicy Unrestricted -File C:\enable_winrm.ps1 -ForceNewSSLCert -EnableCredSSP
        wait_for_customization: yes
        wait_for_ip_address: True
        state: present
      register: newvm

    - name: IP address info
      debug:
        msg: "{{ newvm.instance.ipv4 }} {{ vmname }}"

    - name: collection private IP address of VM
      debug:
        msg: "{{ newvm.outputs.vm_private_ip_address.value }}"
      register: private_ip
 
    - name: Set IP var to pass down to the 2nd Job template
      set_stats:
        data:
          vm_private_IP: "{{ private_ip.msg }}"
