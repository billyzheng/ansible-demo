---
- name: Create server maintenance task and schedule
  hosts: localhost
  gather_facts: false

  tasks:
  - name: Login to device
    uri:
      url: "{{ device_url }}"
      method: GET
      return_content: yes
      status_code: 200
      headers:
        Content-Type: "application/xml"
      body_format: form-urlencoded
      user: "{{ username }}"
      password: "{{ password }}"
    register: api_response

  - debug: var=api_response

  - name: Find device API for server "{{ server_name }}"
    set_fact:
      server_api: "{{ item.URI }}"
    loop: "{{ api_response.json.result_set }}"
    when: item.description == server_name

  - name: Create task
    uri:
      url: https://test.monitoring.abb.com/api/task/
      method: POST
      body_format: json
      body:
        name: "Automation Ansible testing 15 Aug"
        description: "Creating the task id"
        enabled: "1"
        details:
          active: "12"
          patch_window: "0"
        last_run: "0"
        owner: "/api/account/20"
        organization: "/api/organization/1"
        visibility: "Organization"
        aligned_resource: "{{ server_api }}"
      status_code: 201
      headers:
        Content-Type: "application/json"
      user: "{{ username }}"
      password: "{{ password }}"
    register: task_response

  - name: Extract task ID
    set_fact:
       task_id_str: "{{ task_response.json.schedules.URI | regex_search('task/([0-9]+)', '\\1') }}"
       
  - name: Convert task ID to string and remove brackets
    set_fact:
      task_id: "{{ task_id_str[0] }}"

  - ansible.builtin.set_stats:
      data:
        tasks_id: "{{ task_id }}"

  - name: Create schedule
    uri:
      url: https://test.monitoring.abb.com/api/schedule/
      method: POST
      body_format: json
      body:
        dtstart: "1692340800"
        timezone: "390"
        duration: "60"
        description: "Automation Ansible schedule Creation Aug 15"
        recur_expr: "0"
        recur_unit: null
        recur_until: "0"
        owner: "/api/account/20"
        organization: "/api/organization/0"
        visibility: "Organization"
        in_window: "0"
        preserve_in_db: "0"
        ppguid: null
        schedule_guid: null
        tasks:
          - "{{ task_id }}"
      status_code: 201
      headers:
        Content-Type: "application/json"
      user: "{{ username }}"
      password: "{{ password }}"
    register: schedule_response
  
  - debug: var=schedule_response

  - name: Extract task ID
    set_fact:
       schedule_id_str: "{{ schedule_response.json.tasks.URI | regex_search('schedule/([0-9]+)', '\\1') }}" 
       
  - name: Convert task ID to string and remove brackets
    set_fact:
      scheduled_id: "{{ schedule_id_str[0] }}"

  - ansible.builtin.set_stats:
      data:
        schedule_id: "{{ scheduled_id }}"
