---
- name: The main playbooks
  hosts: "{{ _hostname }}"
  tasks:
  # - name: Run common baseline
  #   ansible.builtin.import_role:
  #     name: windows_baseline_common
  
  # - name: Windows 2016 baseline
  #   ansible.builtin.import_role:
  #     name: windows_baseline_2016
  #   when: "'2016' in ansible_facts['os_name']"

  # - name: Windows 2019 baseline
  #   ansible.builtin.import_role:
  #     name: windows_baseline_2019
  #   when: "'2019' in ansible_facts['os_name']"

  # - name: Windows 2022 baseline
  #   ansible.builtin.import_role:
  #     name: windows_baseline_2022
  #   when: "'2022' in ansible_facts['os_name']"

  - name: "win_baseline_1115_state | Ensure Dynamic Host Configuration Protocol Server is set to 'Disabled'"
    ansible.windows.win_regedit:
      path: 'HKLM:\SYSTEM\CurrentControlSet\Services\'
      name: "DHCPServer"
      data: "4"
      type:  dword

  - name: "win_baseline_3377_state | Password expires"
    win_shell: |
      # 获取本地计算机上密码永不过期的用户列表
      $users = Get-WmiObject -Class Win32_UserAccount | Where-Object { $_.PasswordExpires -eq $false }
      $users
    register: user_accounts

  - name: "win_baseline_3377_state | Password expires"
    debug:
      msg: "{{ user_accounts.stdout }}"
    
  - name: "win_baseline_5241_state"
    win_shell: |
      $installedSoftware = Get-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*" -ErrorAction SilentlyContinue
 
      # 常见的安全软件关键字
      $securitySoftwareKeywords = @("antivirus", "security", "firewall", "malware", "protection")
      
      # 过滤出包含安全软件关键字的软件
      $securitySoftware = $installedSoftware | Where-Object {
          foreach ($keyword in $securitySoftwareKeywords) {
              if ($_.DisplayName -match $keyword) {
                  return $true
              }
          }
          return $false
      }

      $securitySoftware
    register: security_software
  
  - name: "win_baseline_5241_state debug"
    debug:
      msg: "{{ security_software.stdout }}"
